#include<bits/stdc++.h>
using namespace std;

class DirectAddressTable {
private:
    vector<int> table;
    vector<bool> exists;
public:
    DirectAddressTable(int size) {
        table.resize(size, -1);
        exists.resize(size, false);
    }
    void insert(int key, int value) {
        table[key] = value;
        exists[key]= true;
    }
    void search(int key) {
        if (exists[key])
            cout<<table[key]<<endl;
        else
            cout<<"NOT FOUND"<<endl;
    }
    void remove(int key) {
        exists[key]=false;  // Mark as deleted
    }
};
int main() {
    int n, q;
    cin>>n>> q;
    cin.ignore();
    DirectAddressTable dat(n);
    for (int i = 0; i < q; i++) {
        string line;
        getline(cin, line);
        stringstream ss(line);
        string command;
        ss>> command;
        if(command == "INSERT") {
            int key,value;
            ss>>key>>value;
            dat.insert(key, value);
        }else if(command == "SEARCH") {
            int key;
            ss>>key;
            dat.search(key);
        }else if(command == "DELETE") {
            int key;
            ss>>key;
            dat.remove(key);
        }
    }
    return 0;
}
